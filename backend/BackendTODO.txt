# Backend Web Template TODO List (FastAPI)

## 1. 기본 설정 및 구조
### 프로젝트 구조 설정 🔥
- [ ] 프로젝트 기본 구조 설정
  - app
    - api (라우터)
    - core (핵심 설정)
    - crud (DB 작업)
    - db (DB 설정)
    - models (SQLAlchemy 모델)
    - schemas
      - responses (표준 응답 스키마)
    - tests (테스트 코드)
  - requirements.txt
  - .env.example

### 기본 설정 ✅
- [ ] FastAPI 기본 설정
- [ ] CORS 설정
- [ ] 환경변수 관리 (.env)
- [ ] 로깅 설정
- [ ] SQLAlchemy 설정 (SQLite 기본)
- [ ] 마이그레이션 도구 설정 (Alembic)
- [ ] 테스트 환경 설정 (pytest)
- [ ] 응답 형식 표준화
  ```python
  # 성공 응답 예시
  {
    "success": true,
    "data": {
      "key": "value"  # EasyObj 호환
      # 또는
      "items": []     # EasyList 호환
    },
    "message": "처리 완료되었습니다."
  }
  
  # 에러 응답 예시
  {
    "success": false,
    "error": {
      "code": "ERROR_CODE",
      "message": "에러 메시지"
    }
  }
  ```

## 2. 데이터베이스
### SQLite 기본 구현 🔥
- [ ] Base 모델 설정
- [ ] 기본 CRUD 유틸리티
- [ ] 마이그레이션 스크립트

### DB 확장성 ⭐
- [ ] MySQL 연동 가이드
- [ ] PostgreSQL 연동 가이드
- [ ] Oracle 연동 가이드
- [ ] DB 전환 가이드 문서

## 3. 인증/인가
### 기본 인증 🔥
- [ ] JWT 인증
- [ ] OAuth2 비밀번호 플로우
- [ ] 토큰 관리 (액세스/리프레시)
- [ ] 비밀번호 해싱

### 권한 관리 🔥
- [ ] RBAC (Role Based Access Control)
- [ ] 권한 데코레이터
- [ ] 미들웨어 구현

## 4. API 엔드포인트
### 사용자 관리 🔥
- [ ] 회원가입
- [ ] 로그인/로그아웃
- [ ] 프로필 관리
- [ ] 비밀번호 변경/초기화

### 게시판 기능 🔥
- [ ] CRUD 작업
- [ ] 페이지네이션
- [ ] 검색/필터링
- [ ] 파일 업로드

### 기타 기능 ⭐
- [ ] 이메일 발송
- [ ] 알림 시스템
- [ ] 캐시 시스템

## 5. 보안
### 기본 보안 설정 🔥
- [ ] Rate Limiting
- [ ] SQL Injection 방지
- [ ] XSS 방지
- [ ] CSRF 보호

### 추가 보안 기능 ⭐
- [ ] API 키 관리
- [ ] IP 차단
- [ ] 요청 검증

## 6. 성능 최적화
- [ ] 데이터베이스 인덱싱
- [ ] 캐싱 전략
- [ ] N+1 쿼리 문제 해결
- [ ] 비동기 작업 처리

## 7. 테스트
### 단위 테스트 🔥
- [ ] API 테스트
- [ ] 모델 테스트
- [ ] 유틸리티 테스트

### 통합 테스트 ⭐
- [ ] 엔드투엔드 테스트
- [ ] 성능 테스트

## 8. 문서화
- [ ] Swagger/ReDoc 설정
  - API 그룹핑 (태그 설정)
  - 상세한 API 설명
  - 요청/응답 예시 추가
  - 인증 방식 문서화
  - 모델 스키마 설명
- [ ] API 버전 관리
  - 버전별 라우터 분리
  - 하위 호환성 유지
- [ ] 코드 문서화
- [ ] 배포 가이드
- [ ] DB 마이그레이션 가이드

## 진행 상황
- 시작 예정
- 첫 작업: 프로젝트 구조 설정

## 참고사항
- SQLite를 기본 DB로 사용
- 다른 DB 전환이 용이하도록 설계
- 테스트 코드 필수
- API 문서화 필수
